220528

왜 웹 어플리케이션이 나왔나? 시대가 빨리빨리 변하니까. 그래서 등장한 게 '웹 어플리케이션 아키텍처'
새로운 게 나올 때마다 화면을 다 그릴 순 없잖아.

 AJAX?
	데이터 송신의 관점에서 서버에서 UI를 계속 가져오는 것보다 데이터만 가져오는 게 효율적임.
	그걸 가능하게 해주는 기술.
	기업용 아키텍처를 구상하는 경우, 비즈니스 변화를 먼저 인지하고 계획해야 됨.
	그 예: MVC, Aop 등
	
<정리>
"데스크톱 어플리케이션":
개인용으로는 최고. MS오피스 봐봐라. 근데, 공동작업이면, 특히 기업용이면 부적절해.

"C/S 어플리케이션":
Client - Server 어플리케이션. 주요 업무로직을 서버에 두고 공유를 하니까 여러 사용자 동시쓰기 좋아. 회계, 인사관리 아주 꿀.
근데, 업무변화 많으면 수시로 배포해야 돼. 그리고 DB서버가 클라이언트한테 노출되면 보안우려 있음.

	"웹 어플리케이션":
		HTML, CSS, 자바스크립트 몽땅 사용가능! 스마트폰, TV, 패드 등 다른 곳에도 모두 호환되서 유용하다
		
	<기초다지기>
	우선 웹 브라우저랑 웹 서버 통신이 어떻게 이뤄지는지 알아야겠죠?
	우선, 통신 프로토콜을 알아야 하는데요. 이 통신 프로토콜은 HTTP(Hyper-Text Transfer Protocol)이라는 뜻이에요.
	웹 브라우저와 웹 서버 사이 데이터 통신 규칙인거죠. 웹페이지 링크 클릭하면 화면 띄워지면서 url 입력이 되죠?
	웹 브라우저가 웹 서버한테 "야 http 이 주소로 데이터 꺼내줘"라고 요청하는거에요.
	
	웹 브라우저가 'HTML내놔' 하면 웹서버가 '응 이거 가져가'
	HTTP프로토콜은 웹 HTML만 가져오는 게 아니라, 원격 컴퓨터의 메서드나 함수 가져올때도 사용함.
	SOAP, RESTful. 많이 들어봤지? Simple Object Access Protocol, REpresentational State Transfer.
	아직 가르쳐주진 않을건데, 못들어봤다면 많이 듣게 될거야 ㅋㅋ
	클라이언트 - 웹서버 간에 주고받는 통신기술 중 하나인데, 이 SOAP, RESTful도 http기술 응용한거여.
	AWS, KT클라우드는 연동도구로 RESTful 방식 API 채택 중! 몰라서는 안되겠지?
	응용기술 중에 WebDAV라는 것도 있는데, 문서, 파일 더 쉽게 도와주는 툴이야.
	CalDAV도 있어. 캘린더 데이터 편집할 때/
	계속 웹기술은 http 프로토콜 중심으로 발전 중.
	
<http모니터링>
웹브라우저와 웹서버 사이의 통신을 보려면 HTTP 프록시 프로그램이 필요해.
왜 이게 필요하냐면 웹브라우저가 요청할 때 HTTP프록시가 요청 대신 받아서 전달하거든.
그리고 서버에서 응답오면 HTTP프록시가 또 전달해줘. 조선시대 '사자'와 비슷하달까.
그래서 HTTP프록시 프로그램 쓰면 '뭘 주고받는거야' 들여다 볼 수 있어.

프록시? 이게 왜 필요함?
빠르게 저장하려고 캐시 쌓는 목적. (캐시는 외부에서 받은 데이터를 임시보관하는 걸 말해.)
웹브라우저에서 웹서버에게 요청받으려고 할 때 프록시가 캐시보고 '어 이거 있는건데?' 하는거지.
그러면 굳이 웹서버한테 요청보내고 응답받을 필요 없잖아. 바로 캐시데이터를 꺼내쓰며 되니까.
그리고 보안때문에! 

데이터를 검사해서 특정 단어같은 경우 뺄 수 있거든.

<프록시 실행>
HTTP 모니터링 프로그램은 Charles, www.charlesproxy.com 에서 내려받을 수 있음. 30일무료? 응 안써~ wireshark 쓸게

HTTP request를 보면 '요청', 웹브라우저가 요청한거임. 그러면 반대로 Response. 응답받은 거겠지.
개행문자? 문자열 한 줄이 끝나고 새로운 줄을 시작한다는 뜻. MS 윈도우에서는 CR코드 + LF 코드 항께 사용한다고 함.
요청라인(Request-Line): GET / HTTP/1.1 ┙ . GET: 메서드. | /: 요청URI | HTTP/1.1: HTTP버전 | ┙: 개행문자
메서드는 웹서버한테 내리는 명령어. CRUD처럼. HTTP 요청메서드 종류로는 GET,POST,HEAD,PUT,DELETE TRACE,CONNECT,OPTIONS 등이 있다고 함.
요청헤더: User-Agent: Mozilla/5.0 (Macint...)┙ : User-Agent: 헤더이름 | Mozilla/5.0 (Macint...): 헤더값 |  ┙: 개행문자 
헤더는 3가지가 있어요. 일반헤더 (general), 요청or응답 해더(request||response), 엔터티 헤더(Entity)
<HTTP 응답>
상태라인(State Line): HTTP/1.1 200 OK : HTTP/1.1: HTTP버전 | 200: 상태 코드 | OK: 상태설명
200 성공 301 요청자원이동 304 클라이언트 임시보관한거랑 달라! 400 잘못된 요청임 404 요청자원 못찾았어 ㅠ 500 서버내부에서 문제발생했어				